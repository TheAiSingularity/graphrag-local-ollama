name: gh-pages
on:
  push:
    branches: [main]

permissions:
  contents: write

env:
  POETRY_VERSION: 1.8.3
  PYTHON_VERSION: "3.11"
  NODE_VERSION: 18.x

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_PAGES: 1
      DEBUG: 1
      GRAPHRAG_LLM_TYPE: "azure_openai_chat"
      GRAPHRAG_EMBEDDING_TYPE: "azure_openai_embedding"
      GRAPHRAG_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GRAPHRAG_API_BASE: ${{ secrets.GRAPHRAG_API_BASE }}
      GRAPHRAG_API_VERSION: ${{ secrets.GRAPHRAG_API_VERSION }}
      GRAPHRAG_LLM_DEPLOYMENT_NAME: ${{ secrets.GRAPHRAG_LLM_DEPLOYMENT_NAME }}
      GRAPHRAG_EMBEDDING_DEPLOYMENT_NAME: ${{ secrets.GRAPHRAG_EMBEDDING_DEPLOYMENT_NAME }}
      GRAPHRAG_CACHE_TYPE: "blob"
      GRAPHRAG_CACHE_CONNECTION_STRING: ${{ secrets.BLOB_STORAGE_CONNECTION_STRING }}
      GRAPHRAG_CACHE_CONTAINER_NAME: "cicache"
      GRAPHRAG_CACHE_BASE_DIR": "cache"
      GRAPHRAG_LLM_MODEL: gpt-3.5-turbo-16k
      GRAPHRAG_EMBEDDING_MODEL: text-embedding-ada-002
      # We have Windows + Linux runners in 3.10 and 3.11, so we need to divide the rate limits by 4
      GRAPHRAG_LLM_TPM: 45_000 # 180,000 / 4
      GRAPHRAG_LLM_RPM: 270 # 1,080 / 4
      GRAPHRAG_EMBEDDING_TPM: 87_500 # 350,000 / 4
      GRAPHRAG_EMBEDDING_RPM: 525 # 2,100 / 4
      GRAPHRAG_CHUNK_SIZE: 1200
      GRAPHRAG_CHUNK_OVERLAP: 0
      # Azure AI Search config
      AZURE_AI_SEARCH_URL_ENDPOINT: ${{ secrets.AZURE_AI_SEARCH_URL_ENDPOINT }}
      AZURE_AI_SEARCH_API_KEY: ${{ secrets.AZURE_AI_SEARCH_API_KEY }}

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry ${{ env.POETRY_VERSION }}
        uses: abatilo/actions-poetry@v3.0.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Yarn dependencies
        run: yarn install
        working-directory: docsite

      - name: Install Poetry dependencies
        run: poetry install

      - name: Install Azurite
        id: azuright
        uses: potatoqualitee/azuright@v1.1

      - name: Generate Indexer Outputs
        run: |
          poetry run poe test_smoke
          zip -jrm docsite/data/operation_dulce/dataset.zip tests/fixtures/min-csv/output/*/artifacts/*.parquet

      - name: Build Jupyter Notebooks
        run: poetry run poe convert_docsite_notebooks

      - name: Build docsite
        run: yarn build
        working-directory: docsite
        env:
          DOCSITE_BASE_URL: "graphrag"

      - name: List docsite files
        run: find docsite/_site

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.6.4
        with:
          branch: gh-pages
          folder: docsite/_site
          clean: true
